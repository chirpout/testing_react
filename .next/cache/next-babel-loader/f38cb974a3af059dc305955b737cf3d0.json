{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/geru/Desktop/testing_react/pages/report.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport DefaultLayout from '../components/DefaultLayout';\nimport { Container } from 'reactstrap';\nimport Winterfell from 'winterfell';\nimport schema from './schema.json';\n\nvar ReportIntroduction = function ReportIntroduction() {\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"display-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Report a workplace concern\"), __jsx(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"How it works:...\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(MyComp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })));\n};\n\nvar originalSchema = {\n  title: 'Location',\n  type: 'object',\n  properties: {\n    location: {\n      type: 'string',\n      title: 'Where do you live?',\n      \"enum\": ['us', 'nordic', 'other'],\n      enumNames: ['US', 'Nordic country', 'Other']\n    },\n    state: {\n      type: 'string',\n      title: 'State',\n      \"enum\": ['AL', 'AK', 'AZ'],\n      enumNames: ['Alabama', 'Alaska', 'Arizona']\n    },\n    nordicCountry: {\n      type: 'string',\n      title: 'Country',\n      \"enum\": ['de', 'fi', 'is', 'no', 'sv'],\n      enumNames: ['brandon', 'Finland', 'Iceland', 'Norway', 'Sweden']\n    },\n    region: {\n      type: 'string',\n      title: 'Region'\n    },\n    country: {\n      type: 'string',\n      title: 'Country'\n    },\n    city: {\n      type: 'string',\n      title: 'City'\n    }\n  }\n};\nvar originalUISchema = {\n  'ui:order': ['location', 'state', 'nordicCountry', 'country', 'region', 'city'],\n  location: {\n    'ui:widget': 'radio',\n    'ui:options': {\n      inline: true\n    },\n    classNames: 'col-xs-12'\n  },\n  state: {\n    // Show state options only if \"US\" was selected\n    condition: 'location=us',\n    classNames: 'col-xs-6'\n  },\n  nordicCountry: {\n    // Show list of Nordic countries if \"Nordic country\" was selected\n    condition: 'location=nordic',\n    'ui:widget': 'radio',\n    classNames: 'col-xs-6'\n  },\n  country: {\n    // Show regular text field for other countries\n    condition: 'location=other',\n    classNames: 'col-xs-6'\n  },\n  city: {\n    // Show city field for all countries but only if a location selection\n    // has been made, i.e. not initially. (It would be nice to be able to\n    // location!=\"\" or something).\n    condition: 'location=us,nordic,other',\n    classNames: 'col-xs-6'\n  },\n  region: {\n    // Show region field for all non-US countries, expect Iceland\n    // if it was selected from the Nordic country list.\n    condition: 'location=other||nordicCountry=fi,de,no,sv',\n    classNames: 'col-xs-6'\n  }\n};\nvar originalFormData = {}; // Process the initial state for the form.\n// Without this step, all fields would be shown initially.\n\nvar initialState = processForm(originalSchema, originalUISchema, originalSchema, originalUISchema, originalFormData);\nvar Form = JSONSchemaForm[\"default\"];\n\nvar MyComp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyComp, _React$Component);\n\n  function MyComp(props) {\n    var _this;\n\n    _classCallCheck(this, MyComp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyComp).call(this, props));\n    _this.state = initialState;\n    return _this;\n  }\n\n  _createClass(MyComp, [{\n    key: \"handleChange\",\n    value: function handleChange(data) {\n      var schema = _objectSpread({}, this.state.schema);\n\n      var uiSchema = _objectSpread({}, this.state.uiSchema);\n\n      var formData = data.formData;\n      var newState = processForm(originalSchema, originalUISchema, schema, uiSchema, formData);\n      this.setState(newState);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Form, {\n        schema: this.state.schema,\n        uiSchema: this.state.uiSchema,\n        formData: this.state.formData,\n        onChange: this.handleChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MyComp;\n}(React.Component);\n\nfunction processForm(originalSchema, originalUISchema, schema, uiSchema, formData) {\n  var newSchema, newUISchema, newFormData;\n\n  var conditionalFields = _.pickBy(uiSchema, function (field) {\n    return field.hasOwnProperty('condition');\n  });\n\n  if (_.isEmpty(conditionalFields)) {\n    return {\n      schema: schema,\n      uiSchema: uiSchema,\n      formData: formData\n    };\n  }\n\n  newSchema = _.assign({}, schema);\n  newUISchema = _.assign({}, uiSchema);\n  newFormData = _.assign({}, formData);\n\n  _.each(conditionalFields, function (dependantSchema, dependant) {\n    var _getConditionRules = getConditionRules(dependantSchema.condition),\n        rules = _getConditionRules.rules,\n        allHaveToMatch = _getConditionRules.allHaveToMatch;\n\n    var matches = [];\n\n    _.each(rules, function (rule) {\n      var _getConditionRule = getConditionRule(rule),\n          field = _getConditionRule.field,\n          stringValues = _getConditionRule.values,\n          invert = _getConditionRule.invert;\n\n      var visible = invert;\n      var values = stringValues.map(function (value) {\n        if (value === 'true') {\n          value = true;\n        } else if (value === 'false') {\n          value = false;\n        }\n\n        return value;\n      });\n\n      if (field && newFormData.hasOwnProperty(field)) {\n        var currentValues = _.isArray(newFormData[field]) ? newFormData[field] : [newFormData[field]];\n\n        _.each(values, function (value) {\n          if (invert) {\n            visible = visible && _.indexOf(currentValues, value) === -1;\n          } else {\n            visible = visible || _.indexOf(currentValues, value) !== -1;\n          }\n        });\n      }\n\n      matches.push(visible);\n    }); // Add or remove conditional field from schema\n\n\n    var shouldBeVisible = false;\n\n    if (matches.length) {\n      shouldBeVisible = allHaveToMatch // foo=bar && bar=foo\n      ? _.every(matches, Boolean) // foo=bar || bar=foo\n      : _.some(matches, Boolean);\n    }\n\n    if (shouldBeVisible) {\n      newSchema.properties[dependant] = originalSchema.properties[dependant];\n    } else {\n      newSchema.properties = _.omit(newSchema.properties, [dependant]);\n      newFormData = _.omit(newFormData, [dependant]);\n    }\n  }); // Update UI Schema UI order\n  // react-jsonschema-form cannot handle extra properties found in UI order\n\n\n  newUISchema['ui:order'] = _.intersection(originalUISchema['ui:order'], _.keys(newSchema.properties)); // Update Schema required fields\n\n  if (originalSchema.hasOwnProperty('required')) {\n    newSchema.required = _.intersection(originalSchema.required, _.keys(newSchema.properties));\n  }\n\n  return {\n    schema: newSchema,\n    uiSchema: newUISchema,\n    formData: newFormData\n  };\n}\n\nfunction getConditionRules() {\n  var condition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var rules = [];\n  var allHaveToMatch = false;\n  var visible = false; // foo=bar || bar=foo\n\n  if (condition.indexOf('||') !== -1) {\n    rules = condition.split('||');\n    allHaveToMatch = false;\n    visible = false;\n  } // foo=bar && bar=foo\n  else if (condition.indexOf('&&') !== -1) {\n      rules = condition.split('&&');\n      allHaveToMatch = true;\n      visible = true;\n    } // foo=bar\n    else {\n        rules = [condition];\n        allHaveToMatch = true;\n        visible = true;\n      }\n\n  return {\n    rules: rules,\n    allHaveToMatch: allHaveToMatch,\n    visible: visible\n  };\n}\n\nfunction getConditionRule(conditionRule) {\n  var rule = [];\n  var invert; // foo!=bar\n\n  if (conditionRule.indexOf('!=') !== -1) {\n    rule = conditionRule.split('!=');\n    invert = true;\n  } // foo=bar\n  else if (conditionRule.indexOf('=') !== -1) {\n      rule = conditionRule.split('=');\n      invert = false;\n    }\n\n  if (rule.length !== 2) {\n    return false;\n  }\n\n  var _rule = rule,\n      _rule2 = _slicedToArray(_rule, 2),\n      field = _rule2[0],\n      values = _rule2[1];\n\n  values = values.split(',');\n  return {\n    field: field,\n    values: values,\n    invert: invert\n  };\n}\n\nexport default function Report() {\n  return __jsx(DefaultLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, __jsx(ReportIntroduction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/geru/Desktop/testing_react/pages/report.js"],"names":["DefaultLayout","Container","Winterfell","schema","ReportIntroduction","originalSchema","title","type","properties","location","enumNames","state","nordicCountry","region","country","city","originalUISchema","inline","classNames","condition","originalFormData","initialState","processForm","Form","JSONSchemaForm","MyComp","props","data","uiSchema","formData","newState","setState","handleChange","bind","React","Component","newSchema","newUISchema","newFormData","conditionalFields","_","pickBy","field","hasOwnProperty","isEmpty","assign","each","dependantSchema","dependant","getConditionRules","rules","allHaveToMatch","matches","rule","getConditionRule","stringValues","values","invert","visible","map","value","currentValues","isArray","indexOf","push","shouldBeVisible","length","every","Boolean","some","omit","intersection","keys","required","split","conditionRule","Report"],"mappings":"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","sourcesContent":["import DefaultLayout from '../components/DefaultLayout';\nimport { Container } from 'reactstrap';\nimport Winterfell from 'winterfell';\nimport schema from './schema.json';\n\nconst ReportIntroduction = () => {\n    return (\n        <Container>\n            <h1 className=\"display-3\">Report a workplace concern</h1>\n            <p className=\"lead\">How it works:...</p>\n            <div>\n                <MyComp />\n            </div>\n        </Container>\n    );\n}\n\nconst originalSchema = {\n\ttitle: 'Location',\n  type: 'object',\n  properties: {\n    location: {\n      type: 'string',\n      title: 'Where do you live?',\n      enum: ['us', 'nordic', 'other'],\n      enumNames: ['US', 'Nordic country', 'Other']\n    },\n    state: {\n      type: 'string',\n      title: 'State',\n      enum: ['AL', 'AK', 'AZ'],\n      enumNames: ['Alabama', 'Alaska', 'Arizona']\n    },\n    nordicCountry: {\n      type: 'string',\n      title: 'Country',\n      enum: ['de', 'fi', 'is', 'no', 'sv'],\n      enumNames: ['brandon', 'Finland', 'Iceland', 'Norway', 'Sweden']\n    },\n    region: {\n    \ttype: 'string',\n      title: 'Region'\n    },\n    country: {\n      type: 'string',\n      title: 'Country'\n    },\n    city: {\n      type: 'string',\n      title: 'City'\n    }\n  }\n};\nconst originalUISchema = {\n  'ui:order': ['location', 'state', 'nordicCountry', 'country', 'region', 'city'],\n  location: {\n    'ui:widget': 'radio',\n    'ui:options': {\n    \tinline: true\n    },\n    classNames: 'col-xs-12'\n  },\n  state: {\n  \t// Show state options only if \"US\" was selected\n    condition: 'location=us',\n    classNames: 'col-xs-6'\n  },\n  nordicCountry: {\n    // Show list of Nordic countries if \"Nordic country\" was selected\n    condition: 'location=nordic',\n    'ui:widget': 'radio',\n    classNames: 'col-xs-6'\n  },\n  country: {\n    // Show regular text field for other countries\n    condition: 'location=other',\n    classNames: 'col-xs-6'\n  },\n  city: {\n    // Show city field for all countries but only if a location selection\n    // has been made, i.e. not initially. (It would be nice to be able to\n    // location!=\"\" or something).\n    condition: 'location=us,nordic,other',\n    classNames: 'col-xs-6'\n  },\n  region: {\n    // Show region field for all non-US countries, expect Iceland\n    // if it was selected from the Nordic country list.\n    condition: 'location=other||nordicCountry=fi,de,no,sv',\n    classNames: 'col-xs-6'\n  },\n};\nconst originalFormData = {};\n\n// Process the initial state for the form.\n// Without this step, all fields would be shown initially.\nconst initialState = processForm(originalSchema, originalUISchema, originalSchema, originalUISchema, originalFormData);\n\nconst Form = JSONSchemaForm.default;\n\nclass MyComp extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = initialState;\n    }\n\n    handleChange (data) {\n        const schema = { ...this.state.schema };\n        const uiSchema = { ...this.state.uiSchema };\n        const { formData } = data;\n\n        const newState = processForm(originalSchema, originalUISchema, schema, uiSchema, formData);\n\n        this.setState(newState);\n    }\n\n    render () {\n        return (<Form\n                schema={this.state.schema}\n                uiSchema={this.state.uiSchema}\n                formData={this.state.formData}\n                onChange={this.handleChange.bind(this)}\n            />);\n    }\n}\n\nfunction processForm (originalSchema, originalUISchema, schema, uiSchema, formData) {\n    let newSchema, newUISchema, newFormData;\n\n    let conditionalFields = _.pickBy(uiSchema, (field) => field.hasOwnProperty('condition'));\n\n    if (_.isEmpty(conditionalFields)) {\n        return {\n            schema,\n            uiSchema,\n            formData\n        };\n    }\n\n    newSchema = _.assign({}, schema);\n    newUISchema = _.assign({}, uiSchema);\n    newFormData = _.assign({}, formData);\n\n    _.each(conditionalFields, (dependantSchema, dependant) => {\n        const { rules, allHaveToMatch } = getConditionRules(dependantSchema.condition);\n        let matches = [];\n        _.each(rules, (rule) => {\n            const { field, values: stringValues, invert } = getConditionRule(rule);\n            let visible = invert;\n\n            const values = stringValues.map(value => {\n                if (value === 'true') {\n                  \tvalue = true;\n                } else if (value === 'false') {\n                  \tvalue = false;\n                }\n                return value;\n            });\n\n\t\t\t\t\t\tif (field && newFormData.hasOwnProperty(field)) {\n                let currentValues = _.isArray(newFormData[field])\n                \t\t? newFormData[field]\n                    : [ newFormData[field] ];\n                _.each(values, (value) => {\n                    if (invert) {\n                      \tvisible = visible && _.indexOf(currentValues, value) === -1;\n                    }\n                    else {\n                        visible = visible || _.indexOf(currentValues, value) !== -1;\n                    }\n                });\n            }\n\n            matches.push(visible);\n        });\n\n        // Add or remove conditional field from schema\n        let shouldBeVisible = false;\n        if (matches.length) {\n            shouldBeVisible = allHaveToMatch\n                // foo=bar && bar=foo\n                ? _.every(matches, Boolean)\n                // foo=bar || bar=foo\n                : _.some(matches, Boolean);\n        }\n\n        if (shouldBeVisible) {\n            newSchema.properties[dependant] = originalSchema.properties[dependant];\n        } else {\n            newSchema.properties = _.omit(newSchema.properties, [dependant]);\n            newFormData = _.omit(newFormData, [dependant]);\n        }\n    });\n\n    // Update UI Schema UI order\n    // react-jsonschema-form cannot handle extra properties found in UI order\n    newUISchema['ui:order'] = _.intersection(\n        originalUISchema['ui:order'],\n        _.keys(newSchema.properties)\n    );\n    // Update Schema required fields\n    if (originalSchema.hasOwnProperty('required')) {\n        newSchema.required = _.intersection(\n            originalSchema.required,\n            _.keys(newSchema.properties)\n        );\n    }\n\n    return {\n        schema: newSchema,\n        uiSchema: newUISchema,\n        formData: newFormData\n    };\n}\n\nfunction getConditionRules (condition = '') {\n    let rules = [];\n    let allHaveToMatch = false;\n    let visible = false;\n\n    // foo=bar || bar=foo\n    if (condition.indexOf('||') !== -1) {\n        rules = condition.split('||');\n        allHaveToMatch = false;\n        visible = false;\n    }\n    // foo=bar && bar=foo\n    else if (condition.indexOf('&&') !== -1) {\n        rules = condition.split('&&');\n        allHaveToMatch = true;\n        visible = true;\n    }\n    // foo=bar\n    else {\n        rules = [condition];\n        allHaveToMatch = true;\n        visible = true;\n    }\n\n    return {\n        rules,\n        allHaveToMatch,\n        visible\n    };\n}\n\nfunction getConditionRule (conditionRule) {\n    let rule = []\n    let invert;\n\n    // foo!=bar\n    if (conditionRule.indexOf('!=') !== -1) {\n        rule = conditionRule.split('!=');\n        invert = true;\n    }\n    // foo=bar\n    else if (conditionRule.indexOf('=') !== -1) {\n        rule = conditionRule.split('=');\n        invert = false;\n    }\n\n    if (rule.length !== 2) {\n        return false;\n    }\n\n    let [field, values] = rule;\n\n    values = values.split(',');\n\n    return {\n        field,\n        values,\n        invert\n    };\n}\n\n\n\n\nexport default function Report() {\n    return (\n        <DefaultLayout>\n            <ReportIntroduction>\n            </ReportIntroduction>\n        </DefaultLayout>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}